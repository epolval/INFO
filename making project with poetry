#==========================
#Make shure you have the newes version of python,pip, and poetry was instilled and in touch:
python3 --version
pip --version
poetry --version
#==========================

#==========================
#Clone repository from GITHUB localy:
git clone git@github.com:epolval/python-project-49.git
#==========================

#==========================
#Inicialize python packet inside root poetry directory:
poetry init
#==========================

#==========================
#While name of main directory of project is different with name of packaje add on .toml file in branch [tool.poetry]:
packages = [{ include = "brain_games" },]
#==========================

#==========================
#add to package .py file with function main(). add to .toml string for short start of function:
[tool.poetry.scripts]
brain-games = "brain_games.scripts.brain_games:main"
#==========================

#==========================
#To do installation of packet:
poetry install
#!!!!!now we can run our application with:!!!!
 poetry run brain-games 
#==========================

#==========================
#To add file Makefile
#to add strings:

install:
	poetry install
brain-games:
	poetry run brain-games



#!!!!!!!!now we can run app with:!!!!!!!!!
make brain-games
#==========================

#==========================
#To add file .gitignore
#to add in this file:
.idea/
.venv/
 dist/
#==========================

#==========================
#To install packet to main OS:
poetry build
python3 -m pip install --user dist/*.whl
#all thees action showld be done from root directory of project

#!!!!if you update your programs: 1)rebuild project 2)uninstall project 3)install it!!!
#==========================

#========================== 
#To test publish project in PYPI
poetry publish --dry-run		
#==========================

#==========================
#to use module from another folder of project: "from <package>.<folder>.<module> import <function name>"
from brain_games.cli import welcome_user
#==========================

#==========================
#for checking quality of code:
#1)registrate on codeclimate
#2)add bage to README.md
#========================== 

#==========================
#for checking quality of code install flake8 to project:
poetry add --goup dev flake8
#create in root of project setup.cfg file for configuring flake8
#========================== 

#==========================
#to start work flake8 for checking code: "poetry run flake8 <packaje folder>"
poetry run flake8 brain_games
#==========================

#==========================
#        asciinema
#==========================
#to record:
asciinema rec brain-prime_defeat.cast
asciinema rec brain-prime_victory.cast

#to upload to asciinema.org
asciinema upload brain-even_defeat.cast

#to add to README.MD
[![brain-prime_defeat](https://asciinema.org/a/zvXkEncLuiLsLHmj4LNml2cko.svg)](https://asciinema.org/a/zvXkEncLuiLsLHmj4LNml2cko)
[![brain-prime_victory](https://asciinema.org/a/JIZl2ajtPiOpZ0gU0UQIBntFn.svg)](https://asciinema.org/a/JIZl2ajtPiOpZ0gU0UQIBntFn)

#==========================
#       PYTHONPATH
#==========================
#PYTHONPATH is a system variable in linux. It order to python where it can find packages and modules,
#dispite usualy pathes.
#for temporarily use command in bash:
export PYTHONPATH=$PYTHONPATH:/home/HEXLET/python-project-49/brain_games
#for continiously add this string to .bashrc and restart


/home/epolval/HEXLET/python-project-49/brain_games


##################################
# poetry add
##################################
# to install application in project using poetry
#for example add ruff(linter) in project:

poetry add --group dev ruff

#the way to script ~/HEXLET/python-project-49/brain_games/scripts/games
